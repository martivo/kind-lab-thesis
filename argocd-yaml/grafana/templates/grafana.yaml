apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    prometheus.io/probe: "true"
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
    name: http-monitoring
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: "haproxy-int"
  rules:
  - host: grafana.{{ .Values.internaldomain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port: 
              number: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: monitoring
data:
  datasources.yaml: |
    datasources:
    -  access: 'proxy'
       editable: true
       is_default: true
       name: 'prometheus'
       org_id: 1
       type: 'prometheus'
       url: 'http://prometheus:9090'
       version: 1 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
    spec:
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      containers:
      - image: grafana/grafana:7.2.1
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: 5000m
            memory: 2500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: grafana-datasource
          mountPath: "/etc/grafana/provisioning/datasources"
        - name: grafana-data
          mountPath: "/var/lib/grafana"
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: grafana-datasource
        configMap:
          name: grafana-datasource
      - name: grafana-data
        hostPath:
          path: /data/grafana
          type: DirectoryOrCreate
---
 
