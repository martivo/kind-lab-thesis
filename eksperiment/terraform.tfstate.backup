{
  "version": 4,
  "terraform_version": "1.0.2",
  "serial": 202,
  "lineage": "11946199-c9bb-ef9d-38be-670270bc8f66",
  "outputs": {
    "k3d_ip_addr": {
      "value": "ssh ubuntu@3.65.182.131",
      "type": "string"
    },
    "kind_ip_addr": {
      "value": "ssh ubuntu@54.93.174.83",
      "type": "string"
    },
    "microk8s_ip_addr": {
      "value": "ssh ubuntu@3.120.148.50",
      "type": "string"
    },
    "minikube_ip_addr": {
      "value": "ssh ubuntu@18.195.188.200",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:eu-central-1::image/ami-0498a49a15494604f",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-05b0f8d9dbc9a7d24",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2022-03-08T23:53:39.000Z",
            "description": "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2022-03-08",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "architecture",
                "values": [
                  "x86_64"
                ]
              },
              {
                "name": "name",
                "values": [
                  "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-0498a49a15494604f",
            "image_id": "ami-0498a49a15494604f",
            "image_location": "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220308",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220308",
            "name_regex": null,
            "owner_id": "099720109477",
            "owners": [
              "099720109477"
            ],
            "platform": null,
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-05b0f8d9dbc9a7d24",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_availability_zone",
      "name": "a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "filter": null,
            "group_name": "eu-central-1",
            "id": "eu-central-1a",
            "name": "eu-central-1a",
            "name_suffix": "a",
            "network_border_group": "eu-central-1",
            "opt_in_status": "opt-in-not-required",
            "parent_zone_id": "",
            "parent_zone_name": "",
            "region": "eu-central-1",
            "state": "available",
            "zone_id": "euc1-az2",
            "zone_type": "availability-zone"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "112659975190",
            "arn": "arn:aws:sts::112659975190:assumed-role/AWSReservedSSO_AdministratorAccess_4cfcb925660fb5db/martivo@awsid.cloud.ee",
            "id": "112659975190",
            "user_id": "AROARUOYOZQLPXWE3ITFX:martivo@awsid.cloud.ee"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Europe (Frankfurt)",
            "endpoint": "ec2.eu-central-1.amazonaws.com",
            "id": "eu-central-1",
            "name": "eu-central-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "k3d",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nk3d cluster create mycluster --config run_k3d.yaml\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#k3d cluster delete mycluster\n",
            "content_base64": "IyEvYmluL2Jhc2gKCk1FTU9SWV9BVkFJTD1gZnJlZSAtbSB8IGdyZXAgTWVtIHwgYXdrICd7cHJpbnQgJDd9J2AKCmVjaG8gIlTDtsO2cmlpc3RhIHBhaWdhbGR1cyIKU1RBUlRfVElNRT0kU0VDT05EUwpjdXJsIC1zIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9rM2QtaW8vazNkL21haW4vaW5zdGFsbC5zaCB8IGJhc2gKZWNobyAiVMO2w7ZyaWlzdGEgcGFpZ2FsZHVzIHbDtXR0aXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGl0IgoKCmVjaG8gIlTDtsO2cmlpc3RhZ2Ega2xhc3RyaSBsb29taW5lLiIKU1RBUlRfVElNRT0kU0VDT05EUwpmcmVlIC1tCmszZCBjbHVzdGVyIGNyZWF0ZSBteWNsdXN0ZXIgLS1jb25maWcgcnVuX2szZC55YW1sCmVjaG8gIlTDtsO2cmlpc3RhIGvDpGl2aXRhbWluZSB2w7V0dGlzICQoKCRTRUNPTkRTIC0gJFNUQVJUX1RJTUUpKSBzZWt1bmRpdCIKCmVjaG8gIktvbnRyb2xsIGthcyBrw7VpayB0w7bDtnRhamEgbWFzaW5hZCBvbiB2YWxtaXMuIgpTVEFSVF9USU1FPSRTRUNPTkRTCmZvbz0kKGt1YmVjdGwgZ2V0IG5vZGVzIHwgZ3JlcCBSZWFkeSB8IHdjIC1sKQp3aGlsZSBbICIkZm9vIiAtbHQgIjgiIF0KZG8KICAgICAgICBzbGVlcCAxCiAgICAgICAgZm9vPSQoa3ViZWN0bCBnZXQgbm9kZXMgfCBncmVwIFJlYWR5IHwgd2MgLWwpCiAgICAgICAgZWNobyAiJGZvbyBub2RlcyByZWFkeSwgd2FpdGluZy4iCmRvbmUKa3ViZWN0bCBnZXQgbm9kZXMKZWNobyAiS8O1aWsgdMO2w7Z0YWphIG1hc2luYWQgb24gdmFsbWlzICQoKCRTRUNPTkRTIC0gJFNUQVJUX1RJTUUpKSBzZWt1bmRpZ2EuIgoKTUVNX05PVz1gZnJlZSAtbSB8IGdyZXAgTWVtIHwgYXdrICd7cHJpbnQgJDd9J2AKCmVjaG8gIk3DpGx1a2FzdXR1c2UgbXV1dHVzIG9uICQoKCRNRU1PUllfQVZBSUwgLSAkTUVNX05PVykpIgpmcmVlIC1tCgojazNkIGNsdXN0ZXIgZGVsZXRlIG15Y2x1c3Rlcgo=",
            "filename": "run_k3d.sh",
            "id": "2e79c16157bd88ad9b1908f49ec97a3de9b83081"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "k3dconf",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: k3d.io/v1alpha4 # this will change in the future as we make everything more stable\nkind: Simple # internally, we also have a Cluster config, which is not yet available externally\nmetadata:\n  name: mycluster\nservers: 3\nagents: 5\noptions:\n  k3d: \n    wait: true\n    timeout: \"600s\"\n  k3s:\n    nodeLabels:\n      - label: ingress=true \n        nodeFilters:\n          - agent:1\n    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`\n      - arg: --node-taint=ingress=true:NoSchedule\n        nodeFilters:\n          - server:1\n",
            "content_base64": "YXBpVmVyc2lvbjogazNkLmlvL3YxYWxwaGE0ICMgdGhpcyB3aWxsIGNoYW5nZSBpbiB0aGUgZnV0dXJlIGFzIHdlIG1ha2UgZXZlcnl0aGluZyBtb3JlIHN0YWJsZQpraW5kOiBTaW1wbGUgIyBpbnRlcm5hbGx5LCB3ZSBhbHNvIGhhdmUgYSBDbHVzdGVyIGNvbmZpZywgd2hpY2ggaXMgbm90IHlldCBhdmFpbGFibGUgZXh0ZXJuYWxseQptZXRhZGF0YToKICBuYW1lOiBteWNsdXN0ZXIKc2VydmVyczogMwphZ2VudHM6IDUKb3B0aW9uczoKICBrM2Q6IAogICAgd2FpdDogdHJ1ZQogICAgdGltZW91dDogIjYwMHMiCiAgazNzOgogICAgbm9kZUxhYmVsczoKICAgICAgLSBsYWJlbDogaW5ncmVzcz10cnVlIAogICAgICAgIG5vZGVGaWx0ZXJzOgogICAgICAgICAgLSBhZ2VudDoxCiAgICBleHRyYUFyZ3M6ICMgYWRkaXRpb25hbCBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSBgazNzIHNlcnZlcnxhZ2VudGAgY29tbWFuZDsgc2FtZSBhcyBgLS1rM3MtYXJnYAogICAgICAtIGFyZzogLS1ub2RlLXRhaW50PWluZ3Jlc3M9dHJ1ZTpOb1NjaGVkdWxlCiAgICAgICAgbm9kZUZpbHRlcnM6CiAgICAgICAgICAtIHNlcnZlcjoxCg==",
            "filename": "run_k3d.yaml",
            "id": "7eeded50439fa27264105f63c6838f54d2bb67d6"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "kind",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64\nchmod +x ./kind\nsudo mv ./kind /usr/bin/kind\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nkind create cluster --config run_kind.yaml\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\n        echo \"$foo CNI pods ready, waiting.\"\ndone\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n\n#kind delete cluster --name multi-a\n",
            "content_base64": "IyEvYmluL2Jhc2gKCk1FTU9SWV9BVkFJTD1gZnJlZSAtbSB8IGdyZXAgTWVtIHwgYXdrICd7cHJpbnQgJDd9J2AKCmVjaG8gIlTDtsO2cmlpc3RhIHBhaWdhbGR1cyIKU1RBUlRfVElNRT0kU0VDT05EUwpjdXJsIC1MbyAuL2tpbmQgaHR0cHM6Ly9raW5kLnNpZ3MuazhzLmlvL2RsL3YwLjExLjEva2luZC1saW51eC1hbWQ2NApjaG1vZCAreCAuL2tpbmQKc3VkbyBtdiAuL2tpbmQgL3Vzci9iaW4va2luZAoKZWNobyAiVMO2w7ZyaWlzdGEgcGFpZ2FsZHVzIHbDtXR0aXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGl0IgoKCmVjaG8gIlTDtsO2cmlpc3RhZ2Ega2xhc3RyaSBsb29taW5lLiIKU1RBUlRfVElNRT0kU0VDT05EUwpmcmVlIC1tCmtpbmQgY3JlYXRlIGNsdXN0ZXIgLS1jb25maWcgcnVuX2tpbmQueWFtbAplY2hvICJUw7bDtnJpaXN0YSBrw6Rpdml0YW1pbmUgdsO1dHRpcyAkKCgkU0VDT05EUyAtICRTVEFSVF9USU1FKSkgc2VrdW5kaXQiCgplY2hvICJLb250cm9sbCBrYXMga8O1aWsgdMO2w7Z0YWphIG1hc2luYWQgb24gdmFsbWlzLiIKU1RBUlRfVElNRT0kU0VDT05EUwpmb289JChrdWJlY3RsIGdldCBwb2RzIC1uIGt1YmUtc3lzdGVtIC1sIGFwcD1raW5kbmV0IC0tbm8taGVhZGVycyB8IGdyZXAgIlJ1bm5pbmciIHwgd2MgLWwpCndoaWxlIFsgIiRmb28iIC1sdCAiOCIgXQpkbwogICAgICAgIHNsZWVwIDEKICAgICAgICBmb289JChrdWJlY3RsIGdldCBwb2RzIC1uIGt1YmUtc3lzdGVtIC1sIGFwcD1raW5kbmV0IC0tbm8taGVhZGVycyB8IGdyZXAgIlJ1bm5pbmciIHwgd2MgLWwpCiAgICAgICAgZWNobyAiJGZvbyBDTkkgcG9kcyByZWFkeSwgd2FpdGluZy4iCmRvbmUKZm9vPSQoa3ViZWN0bCBnZXQgbm9kZXMgfCBncmVwIFJlYWR5IHwgd2MgLWwpCndoaWxlIFsgIiRmb28iIC1sdCAiOCIgXQpkbwogICAgICAgIHNsZWVwIDEKICAgICAgICBmb289JChrdWJlY3RsIGdldCBub2RlcyB8IGdyZXAgUmVhZHkgfCB3YyAtbCkKICAgICAgICBlY2hvICIkZm9vIG5vZGVzIHJlYWR5LCB3YWl0aW5nLiIKZG9uZQprdWJlY3RsIGdldCBub2RlcwplY2hvICJLw7VpayB0w7bDtnRhamEgbWFzaW5hZCBvbiB2YWxtaXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGlnYS4iCgpNRU1fTk9XPWBmcmVlIC1tIHwgZ3JlcCBNZW0gfCBhd2sgJ3twcmludCAkN30nYAoKZWNobyAiTcOkbHVrYXN1dHVzZSBtdXV0dXMgb24gJCgoJE1FTU9SWV9BVkFJTCAtICRNRU1fTk9XKSkiCmZyZWUgLW0KCgoja2luZCBkZWxldGUgY2x1c3RlciAtLW5hbWUgbXVsdGktYQo=",
            "filename": "run_kind.sh",
            "id": "282c5a7f029f3e515abe2c46958e974dd1703186"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "kindconf",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: multi-a\nnetworking:\n  podSubnet: \"10.241.0.0/16\"\n  serviceSubnet: \"10.92.0.0/16\"\n  ipFamily: ipv4\nnodes:\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n  kubeadmConfigPatches:\n  - |\n    kind: JoinConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress=true\"\n        register-with-taints: \"ingress=true:NoSchedule\"\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n  kubeadmConfigPatches:\n  - |\n    kind: JoinConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress=true\"\n        register-with-taints: \"ingress=true:NoSchedule\"\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n\n",
            "content_base64": "a2luZDogQ2x1c3RlcgphcGlWZXJzaW9uOiBraW5kLngtazhzLmlvL3YxYWxwaGE0Cm5hbWU6IG11bHRpLWEKbmV0d29ya2luZzoKICBwb2RTdWJuZXQ6ICIxMC4yNDEuMC4wLzE2IgogIHNlcnZpY2VTdWJuZXQ6ICIxMC45Mi4wLjAvMTYiCiAgaXBGYW1pbHk6IGlwdjQKbm9kZXM6Ci0gcm9sZTogY29udHJvbC1wbGFuZQogIGV4dHJhTW91bnRzOgogIC0gaG9zdFBhdGg6IC4vc2hhcmVkL211bHRpLWEKICAgIGNvbnRhaW5lclBhdGg6IC9kYXRhCi0gcm9sZTogY29udHJvbC1wbGFuZQogIGV4dHJhTW91bnRzOgogIC0gaG9zdFBhdGg6IC4vc2hhcmVkL211bHRpLWEKICAgIGNvbnRhaW5lclBhdGg6IC9kYXRhCi0gcm9sZTogY29udHJvbC1wbGFuZQogIGV4dHJhTW91bnRzOgogIC0gaG9zdFBhdGg6IC4vc2hhcmVkL211bHRpLWEKICAgIGNvbnRhaW5lclBhdGg6IC9kYXRhCi0gcm9sZTogd29ya2VyCiAgZXh0cmFNb3VudHM6CiAgLSBob3N0UGF0aDogLi9zaGFyZWQvbXVsdGktYQogICAgY29udGFpbmVyUGF0aDogL2RhdGEKICBrdWJlYWRtQ29uZmlnUGF0Y2hlczoKICAtIHwKICAgIGtpbmQ6IEpvaW5Db25maWd1cmF0aW9uCiAgICBub2RlUmVnaXN0cmF0aW9uOgogICAgICBrdWJlbGV0RXh0cmFBcmdzOgogICAgICAgIG5vZGUtbGFiZWxzOiAiaW5ncmVzcz10cnVlIgogICAgICAgIHJlZ2lzdGVyLXdpdGgtdGFpbnRzOiAiaW5ncmVzcz10cnVlOk5vU2NoZWR1bGUiCi0gcm9sZTogd29ya2VyCiAgZXh0cmFNb3VudHM6CiAgLSBob3N0UGF0aDogLi9zaGFyZWQvbXVsdGktYQogICAgY29udGFpbmVyUGF0aDogL2RhdGEKICBrdWJlYWRtQ29uZmlnUGF0Y2hlczoKICAtIHwKICAgIGtpbmQ6IEpvaW5Db25maWd1cmF0aW9uCiAgICBub2RlUmVnaXN0cmF0aW9uOgogICAgICBrdWJlbGV0RXh0cmFBcmdzOgogICAgICAgIG5vZGUtbGFiZWxzOiAiaW5ncmVzcz10cnVlIgogICAgICAgIHJlZ2lzdGVyLXdpdGgtdGFpbnRzOiAiaW5ncmVzcz10cnVlOk5vU2NoZWR1bGUiCi0gcm9sZTogd29ya2VyCiAgZXh0cmFNb3VudHM6CiAgLSBob3N0UGF0aDogLi9zaGFyZWQvbXVsdGktYQogICAgY29udGFpbmVyUGF0aDogL2RhdGEKLSByb2xlOiB3b3JrZXIKICBleHRyYU1vdW50czoKICAtIGhvc3RQYXRoOiAuL3NoYXJlZC9tdWx0aS1hCiAgICBjb250YWluZXJQYXRoOiAvZGF0YQotIHJvbGU6IHdvcmtlcgogIGV4dHJhTW91bnRzOgogIC0gaG9zdFBhdGg6IC4vc2hhcmVkL211bHRpLWEKICAgIGNvbnRhaW5lclBhdGg6IC9kYXRhCgo=",
            "filename": "run_kind.yaml",
            "id": "aae6607e1982886547a9f108520d74d1be6e9aa0"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "microk8s",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\n#sudo snap install lxd\nsudo apt -y install lxd\nsudo lxd init --auto\nlxc profile create microk8s\nwget https://raw.githubusercontent.com/ubuntu/microk8s/master/tests/lxc/microk8s.profile -O microk8s.profile\ncat microk8s.profile | lxc profile edit microk8s\nrm microk8s.profile\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\n#https://microk8s.io/docs/lxd\n#https://ubuntu.com/tutorials/getting-started-with-kubernetes-ha?\u0026_ga=2.199186223.1894255953.1646810874-1723796373.1646050010#4-create-a-microk8s-multinode-cluster\n\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m1\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m2 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m3 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w1 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w2 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w3 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w4 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w5 \u0026\nwhile [ \"$(lxc list | grep RUNNING | wc -l)\" -ne 8 ]\ndo\n        sleep 0.1\ndone\nlxc exec microk8s-m1 -- snap install microk8s --classic\nlxc exec microk8s-m2 -- snap install microk8s --classic\nlxc exec microk8s-m3 -- snap install microk8s --classic\nlxc exec microk8s-w1 -- snap install microk8s --classic\nlxc exec microk8s-w2 -- snap install microk8s --classic\nlxc exec microk8s-w3 -- snap install microk8s --classic\nlxc exec microk8s-w4 -- snap install microk8s --classic\nlxc exec microk8s-w5 -- snap install microk8s --classic\nlxc exec microk8s-m1 -- microk8s status --wait-ready\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-m2 -- $join_cmd --controlplane\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-m3 -- $join_cmd --controlplane\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w1 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w2 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w3 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w4 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w5 -- $join_cmd --worker\n\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(lxc exec microk8s-m1 -- microk8s kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(lxc exec microk8s-m1 -- microk8s kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nlxc exec microk8s-m1 -- microk8s kubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#lxc delete microk8s-m1 microk8s-m2 microk8s-m3 microk8s-w1 microk8s-w2 microk8s-w3 microk8s-w4 microk8s-w5 --force\n\n\n",
            "content_base64": "IyEvYmluL2Jhc2gKCk1FTU9SWV9BVkFJTD1gZnJlZSAtbSB8IGdyZXAgTWVtIHwgYXdrICd7cHJpbnQgJDd9J2AKCmVjaG8gIlTDtsO2cmlpc3RhIHBhaWdhbGR1cyIKU1RBUlRfVElNRT0kU0VDT05EUwojc3VkbyBzbmFwIGluc3RhbGwgbHhkCnN1ZG8gYXB0IC15IGluc3RhbGwgbHhkCnN1ZG8gbHhkIGluaXQgLS1hdXRvCmx4YyBwcm9maWxlIGNyZWF0ZSBtaWNyb2s4cwp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS91YnVudHUvbWljcm9rOHMvbWFzdGVyL3Rlc3RzL2x4Yy9taWNyb2s4cy5wcm9maWxlIC1PIG1pY3JvazhzLnByb2ZpbGUKY2F0IG1pY3JvazhzLnByb2ZpbGUgfCBseGMgcHJvZmlsZSBlZGl0IG1pY3JvazhzCnJtIG1pY3JvazhzLnByb2ZpbGUKCmVjaG8gIlTDtsO2cmlpc3RhIHBhaWdhbGR1cyB2w7V0dGlzICQoKCRTRUNPTkRTIC0gJFNUQVJUX1RJTUUpKSBzZWt1bmRpdCIKCgplY2hvICJUw7bDtnJpaXN0YWdhIGtsYXN0cmkgbG9vbWluZS4iClNUQVJUX1RJTUU9JFNFQ09ORFMKZnJlZSAtbQojaHR0cHM6Ly9taWNyb2s4cy5pby9kb2NzL2x4ZAojaHR0cHM6Ly91YnVudHUuY29tL3R1dG9yaWFscy9nZXR0aW5nLXN0YXJ0ZWQtd2l0aC1rdWJlcm5ldGVzLWhhPyZfZ2E9Mi4xOTkxODYyMjMuMTg5NDI1NTk1My4xNjQ2ODEwODc0LTE3MjM3OTYzNzMuMTY0NjA1MDAxMCM0LWNyZWF0ZS1hLW1pY3JvazhzLW11bHRpbm9kZS1jbHVzdGVyCgpseGMgbGF1bmNoIC1wIGRlZmF1bHQgLXAgbWljcm9rOHMgdWJ1bnR1OjIwLjA0IG1pY3JvazhzLW0xCmx4YyBsYXVuY2ggLXAgZGVmYXVsdCAtcCBtaWNyb2s4cyB1YnVudHU6MjAuMDQgbWljcm9rOHMtbTIgJgpseGMgbGF1bmNoIC1wIGRlZmF1bHQgLXAgbWljcm9rOHMgdWJ1bnR1OjIwLjA0IG1pY3JvazhzLW0zICYKbHhjIGxhdW5jaCAtcCBkZWZhdWx0IC1wIG1pY3JvazhzIHVidW50dToyMC4wNCBtaWNyb2s4cy13MSAmCmx4YyBsYXVuY2ggLXAgZGVmYXVsdCAtcCBtaWNyb2s4cyB1YnVudHU6MjAuMDQgbWljcm9rOHMtdzIgJgpseGMgbGF1bmNoIC1wIGRlZmF1bHQgLXAgbWljcm9rOHMgdWJ1bnR1OjIwLjA0IG1pY3JvazhzLXczICYKbHhjIGxhdW5jaCAtcCBkZWZhdWx0IC1wIG1pY3JvazhzIHVidW50dToyMC4wNCBtaWNyb2s4cy13NCAmCmx4YyBsYXVuY2ggLXAgZGVmYXVsdCAtcCBtaWNyb2s4cyB1YnVudHU6MjAuMDQgbWljcm9rOHMtdzUgJgp3aGlsZSBbICIkKGx4YyBsaXN0IHwgZ3JlcCBSVU5OSU5HIHwgd2MgLWwpIiAtbmUgOCBdCmRvCiAgICAgICAgc2xlZXAgMC4xCmRvbmUKbHhjIGV4ZWMgbWljcm9rOHMtbTEgLS0gc25hcCBpbnN0YWxsIG1pY3JvazhzIC0tY2xhc3NpYwpseGMgZXhlYyBtaWNyb2s4cy1tMiAtLSBzbmFwIGluc3RhbGwgbWljcm9rOHMgLS1jbGFzc2ljCmx4YyBleGVjIG1pY3JvazhzLW0zIC0tIHNuYXAgaW5zdGFsbCBtaWNyb2s4cyAtLWNsYXNzaWMKbHhjIGV4ZWMgbWljcm9rOHMtdzEgLS0gc25hcCBpbnN0YWxsIG1pY3JvazhzIC0tY2xhc3NpYwpseGMgZXhlYyBtaWNyb2s4cy13MiAtLSBzbmFwIGluc3RhbGwgbWljcm9rOHMgLS1jbGFzc2ljCmx4YyBleGVjIG1pY3JvazhzLXczIC0tIHNuYXAgaW5zdGFsbCBtaWNyb2s4cyAtLWNsYXNzaWMKbHhjIGV4ZWMgbWljcm9rOHMtdzQgLS0gc25hcCBpbnN0YWxsIG1pY3JvazhzIC0tY2xhc3NpYwpseGMgZXhlYyBtaWNyb2s4cy13NSAtLSBzbmFwIGluc3RhbGwgbWljcm9rOHMgLS1jbGFzc2ljCmx4YyBleGVjIG1pY3JvazhzLW0xIC0tIG1pY3JvazhzIHN0YXR1cyAtLXdhaXQtcmVhZHkKam9pbl9jbWQ9JChseGMgZXhlYyBtaWNyb2s4cy1tMSAtLSBtaWNyb2s4cyBhZGQtbm9kZSAtLWZvcm1hdCBzaG9ydCB8IGhlYWQgLTEpCmx4YyBleGVjIG1pY3JvazhzLW0yIC0tICRqb2luX2NtZCAtLWNvbnRyb2xwbGFuZQpqb2luX2NtZD0kKGx4YyBleGVjIG1pY3JvazhzLW0xIC0tIG1pY3JvazhzIGFkZC1ub2RlIC0tZm9ybWF0IHNob3J0IHwgaGVhZCAtMSkKbHhjIGV4ZWMgbWljcm9rOHMtbTMgLS0gJGpvaW5fY21kIC0tY29udHJvbHBsYW5lCmpvaW5fY21kPSQobHhjIGV4ZWMgbWljcm9rOHMtbTEgLS0gbWljcm9rOHMgYWRkLW5vZGUgLS1mb3JtYXQgc2hvcnQgfCBoZWFkIC0xKQpseGMgZXhlYyBtaWNyb2s4cy13MSAtLSAkam9pbl9jbWQgLS13b3JrZXIKam9pbl9jbWQ9JChseGMgZXhlYyBtaWNyb2s4cy1tMSAtLSBtaWNyb2s4cyBhZGQtbm9kZSAtLWZvcm1hdCBzaG9ydCB8IGhlYWQgLTEpCmx4YyBleGVjIG1pY3JvazhzLXcyIC0tICRqb2luX2NtZCAtLXdvcmtlcgpqb2luX2NtZD0kKGx4YyBleGVjIG1pY3JvazhzLW0xIC0tIG1pY3JvazhzIGFkZC1ub2RlIC0tZm9ybWF0IHNob3J0IHwgaGVhZCAtMSkKbHhjIGV4ZWMgbWljcm9rOHMtdzMgLS0gJGpvaW5fY21kIC0td29ya2VyCmpvaW5fY21kPSQobHhjIGV4ZWMgbWljcm9rOHMtbTEgLS0gbWljcm9rOHMgYWRkLW5vZGUgLS1mb3JtYXQgc2hvcnQgfCBoZWFkIC0xKQpseGMgZXhlYyBtaWNyb2s4cy13NCAtLSAkam9pbl9jbWQgLS13b3JrZXIKam9pbl9jbWQ9JChseGMgZXhlYyBtaWNyb2s4cy1tMSAtLSBtaWNyb2s4cyBhZGQtbm9kZSAtLWZvcm1hdCBzaG9ydCB8IGhlYWQgLTEpCmx4YyBleGVjIG1pY3JvazhzLXc1IC0tICRqb2luX2NtZCAtLXdvcmtlcgoKZWNobyAiVMO2w7ZyaWlzdGEga8OkaXZpdGFtaW5lIHbDtXR0aXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGl0IgoKZWNobyAiS29udHJvbGwga2FzIGvDtWlrIHTDtsO2dGFqYSBtYXNpbmFkIG9uIHZhbG1pcy4iClNUQVJUX1RJTUU9JFNFQ09ORFMKZm9vPSQobHhjIGV4ZWMgbWljcm9rOHMtbTEgLS0gbWljcm9rOHMga3ViZWN0bCBnZXQgbm9kZXMgfCBncmVwIFJlYWR5IHwgd2MgLWwpCndoaWxlIFsgIiRmb28iIC1sdCAiOCIgXQpkbwogICAgICAgIHNsZWVwIDEKICAgICAgICBmb289JChseGMgZXhlYyBtaWNyb2s4cy1tMSAtLSBtaWNyb2s4cyBrdWJlY3RsIGdldCBub2RlcyB8IGdyZXAgUmVhZHkgfCB3YyAtbCkKICAgICAgICBlY2hvICIkZm9vIG5vZGVzIHJlYWR5LCB3YWl0aW5nLiIKZG9uZQpseGMgZXhlYyBtaWNyb2s4cy1tMSAtLSBtaWNyb2s4cyBrdWJlY3RsIGdldCBub2RlcwplY2hvICJLw7VpayB0w7bDtnRhamEgbWFzaW5hZCBvbiB2YWxtaXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGlnYS4iCgpNRU1fTk9XPWBmcmVlIC1tIHwgZ3JlcCBNZW0gfCBhd2sgJ3twcmludCAkN30nYAoKZWNobyAiTcOkbHVrYXN1dHVzZSBtdXV0dXMgb24gJCgoJE1FTU9SWV9BVkFJTCAtICRNRU1fTk9XKSkiCmZyZWUgLW0KCiNseGMgZGVsZXRlIG1pY3JvazhzLW0xIG1pY3JvazhzLW0yIG1pY3JvazhzLW0zIG1pY3JvazhzLXcxIG1pY3JvazhzLXcyIG1pY3JvazhzLXczIG1pY3JvazhzLXc0IG1pY3JvazhzLXc1IC0tZm9yY2UKCgo=",
            "filename": "run_microk8s.sh",
            "id": "9fa7e38d088b112fb51540ff7a108584650bdb85"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "minikube",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/bin/minikube\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nminikube start -p myminikube -n 8 --container-runtime docker --driver=docker \n\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\n        echo \"$foo CNI pods ready, waiting.\"\ndone\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#minikube delete -p myminikube\n\n",
            "content_base64": "IyEvYmluL2Jhc2gKCk1FTU9SWV9BVkFJTD1gZnJlZSAtbSB8IGdyZXAgTWVtIHwgYXdrICd7cHJpbnQgJDd9J2AKCmVjaG8gIlTDtsO2cmlpc3RhIHBhaWdhbGR1cyIKU1RBUlRfVElNRT0kU0VDT05EUwpjdXJsIC1MTyBodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vbWluaWt1YmUvcmVsZWFzZXMvbGF0ZXN0L21pbmlrdWJlLWxpbnV4LWFtZDY0CnN1ZG8gaW5zdGFsbCBtaW5pa3ViZS1saW51eC1hbWQ2NCAvdXNyL2Jpbi9taW5pa3ViZQoKZWNobyAiVMO2w7ZyaWlzdGEgcGFpZ2FsZHVzIHbDtXR0aXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGl0IgoKCmVjaG8gIlTDtsO2cmlpc3RhZ2Ega2xhc3RyaSBsb29taW5lLiIKU1RBUlRfVElNRT0kU0VDT05EUwpmcmVlIC1tCm1pbmlrdWJlIHN0YXJ0IC1wIG15bWluaWt1YmUgLW4gOCAtLWNvbnRhaW5lci1ydW50aW1lIGRvY2tlciAtLWRyaXZlcj1kb2NrZXIgCgplY2hvICJUw7bDtnJpaXN0YSBrw6Rpdml0YW1pbmUgdsO1dHRpcyAkKCgkU0VDT05EUyAtICRTVEFSVF9USU1FKSkgc2VrdW5kaXQiCgplY2hvICJLb250cm9sbCBrYXMga8O1aWsgdMO2w7Z0YWphIG1hc2luYWQgb24gdmFsbWlzLiIKU1RBUlRfVElNRT0kU0VDT05EUwpmb289JChrdWJlY3RsIGdldCBwb2RzIC1uIGt1YmUtc3lzdGVtIC1sIGFwcD1raW5kbmV0IC0tbm8taGVhZGVycyB8IGdyZXAgIlJ1bm5pbmciIHwgd2MgLWwpCndoaWxlIFsgIiRmb28iIC1sdCAiOCIgXQpkbwogICAgICAgIHNsZWVwIDEKICAgICAgICBmb289JChrdWJlY3RsIGdldCBwb2RzIC1uIGt1YmUtc3lzdGVtIC1sIGFwcD1raW5kbmV0IC0tbm8taGVhZGVycyB8IGdyZXAgIlJ1bm5pbmciIHwgd2MgLWwpCiAgICAgICAgZWNobyAiJGZvbyBDTkkgcG9kcyByZWFkeSwgd2FpdGluZy4iCmRvbmUKZm9vPSQoa3ViZWN0bCBnZXQgbm9kZXMgfCBncmVwIFJlYWR5IHwgd2MgLWwpCndoaWxlIFsgIiRmb28iIC1sdCAiOCIgXQpkbwogICAgICAgIHNsZWVwIDEKICAgICAgICBmb289JChrdWJlY3RsIGdldCBub2RlcyB8IGdyZXAgUmVhZHkgfCB3YyAtbCkKICAgICAgICBlY2hvICIkZm9vIG5vZGVzIHJlYWR5LCB3YWl0aW5nLiIKZG9uZQprdWJlY3RsIGdldCBub2RlcwplY2hvICJLw7VpayB0w7bDtnRhamEgbWFzaW5hZCBvbiB2YWxtaXMgJCgoJFNFQ09ORFMgLSAkU1RBUlRfVElNRSkpIHNla3VuZGlnYS4iCgpNRU1fTk9XPWBmcmVlIC1tIHwgZ3JlcCBNZW0gfCBhd2sgJ3twcmludCAkN30nYAoKZWNobyAiTcOkbHVrYXN1dHVzZSBtdXV0dXMgb24gJCgoJE1FTU9SWV9BVkFJTCAtICRNRU1fTk9XKSkiCmZyZWUgLW0KCiNtaW5pa3ViZSBkZWxldGUgLXAgbXltaW5pa3ViZQoK",
            "filename": "run_minikube.sh",
            "id": "1e1029111e27bf465f8308fe4aba4da9ebb4d87e"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "eipassoc-05494016e228c2ba8",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-04c03573c9d28e747",
            "instance": "",
            "network_border_group": "eu-central-1",
            "network_interface": "eni-05c7db6c9ba622ea0",
            "private_dns": "ip-10-139-0-205.eu-central-1.compute.internal",
            "private_ip": "10.139.0.205",
            "public_dns": "ec2-18-159-117-161.eu-central-1.compute.amazonaws.com",
            "public_ip": "18.159.117.161",
            "public_ipv4_pool": "amazon",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::112659975190:instance-profile/experiment-eks-node-instance-profile",
            "create_date": "2022-03-09T07:02:17Z",
            "id": "experiment-eks-node-instance-profile",
            "name": "experiment-eks-node-instance-profile",
            "name_prefix": null,
            "path": "/",
            "role": "experiment-eks-node-role",
            "tags": {},
            "tags_all": {},
            "unique_id": "AIPARUOYOZQLLZTRGJBZ7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.node"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::112659975190:role/experiment-eks-node-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-03-09T07:02:15Z",
            "description": "",
            "force_detach_policies": false,
            "id": "experiment-eks-node-role",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "experiment-eks-node-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROARUOYOZQLC4C5HWHMU"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "k3d",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0498a49a15494604f",
            "arn": "arn:aws:ec2:eu-central-1:112659975190:instance/i-0d0fe4a6e557196df",
            "associate_public_ip_address": true,
            "availability_zone": "eu-central-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "experiment-eks-node-instance-profile",
            "id": "i-0d0fe4a6e557196df",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "m5.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "martivo-x220",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-03d206652998b6f43",
            "private_dns": "ip-10-139-0-194.eu-central-1.compute.internal",
            "private_ip": "10.139.0.194",
            "public_dns": "ec2-3-65-182-131.eu-central-1.compute.amazonaws.com",
            "public_ip": "3.65.182.131",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-05dc054ea3a997a3f",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-078d3adb210d347d1",
            "tags": {
              "Name": "experiment-k3d"
            },
            "tags_all": {
              "Name": "experiment-k3d"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-08fbbace557256e78"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_vpc.main",
            "data.aws_ami.ubuntu-server",
            "data.aws_availability_zone.a",
            "aws_iam_instance_profile.node",
            "aws_iam_role.node",
            "aws_security_group.node",
            "aws_subnet.public-a"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "kind",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0498a49a15494604f",
            "arn": "arn:aws:ec2:eu-central-1:112659975190:instance/i-06de3b4468e9b669d",
            "associate_public_ip_address": true,
            "availability_zone": "eu-central-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "experiment-eks-node-instance-profile",
            "id": "i-06de3b4468e9b669d",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "m5.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "martivo-x220",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-05ef4263b5cc03a08",
            "private_dns": "ip-10-139-0-26.eu-central-1.compute.internal",
            "private_ip": "10.139.0.26",
            "public_dns": "ec2-54-93-174-83.eu-central-1.compute.amazonaws.com",
            "public_ip": "54.93.174.83",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-034e8c6a6b0ba0a8f",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-078d3adb210d347d1",
            "tags": {
              "Name": "experiment-kind"
            },
            "tags_all": {
              "Name": "experiment-kind"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-08fbbace557256e78"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.node",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_ami.ubuntu-server",
            "data.aws_availability_zone.a",
            "aws_iam_instance_profile.node",
            "aws_iam_role.node"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "microk8s",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0498a49a15494604f",
            "arn": "arn:aws:ec2:eu-central-1:112659975190:instance/i-02f866dea971bedae",
            "associate_public_ip_address": true,
            "availability_zone": "eu-central-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "experiment-eks-node-instance-profile",
            "id": "i-02f866dea971bedae",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "m5.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "martivo-x220",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0f07d69654fae94a9",
            "private_dns": "ip-10-139-0-164.eu-central-1.compute.internal",
            "private_ip": "10.139.0.164",
            "public_dns": "ec2-3-120-148-50.eu-central-1.compute.amazonaws.com",
            "public_ip": "3.120.148.50",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0ec43a19b7da0231a",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-078d3adb210d347d1",
            "tags": {
              "Name": "experiment-microk8s"
            },
            "tags_all": {
              "Name": "experiment-microk8s"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-08fbbace557256e78"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zone.a",
            "aws_iam_instance_profile.node",
            "aws_iam_role.node",
            "aws_security_group.node",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_ami.ubuntu-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "minikube",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0498a49a15494604f",
            "arn": "arn:aws:ec2:eu-central-1:112659975190:instance/i-076b366b3633706cd",
            "associate_public_ip_address": true,
            "availability_zone": "eu-central-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "experiment-eks-node-instance-profile",
            "id": "i-076b366b3633706cd",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "m5.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "martivo-x220",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0f7ea485b5b65a724",
            "private_dns": "ip-10-139-0-138.eu-central-1.compute.internal",
            "private_ip": "10.139.0.138",
            "public_dns": "ec2-18-195-188-200.eu-central-1.compute.amazonaws.com",
            "public_ip": "18.195.188.200",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-09f27823c90fb5532",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-078d3adb210d347d1",
            "tags": {
              "Name": "experiment-minikube"
            },
            "tags_all": {
              "Name": "experiment-minikube"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-08fbbace557256e78"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zone.a",
            "aws_iam_instance_profile.node",
            "aws_iam_role.node",
            "aws_security_group.node",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_ami.ubuntu-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:internet-gateway/igw-02f7bc53735b6acbd",
            "id": "igw-02f7bc53735b6acbd",
            "owner_id": "112659975190",
            "tags": {},
            "tags_all": {},
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "gw-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-04c03573c9d28e747",
            "connectivity_type": "public",
            "id": "nat-0c5bba8160c29f05c",
            "network_interface_id": "eni-05c7db6c9ba622ea0",
            "private_ip": "10.139.0.205",
            "public_ip": "18.159.117.161",
            "subnet_id": "subnet-078d3adb210d347d1",
            "tags": {
              "Name": "experiment-gw-a"
            },
            "tags_all": {
              "Name": "experiment-gw-a"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zone.a",
            "aws_eip.nat-a",
            "aws_internet_gateway.gw",
            "aws_subnet.public-a",
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "r-private-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:route-table/rtb-0fab6fd73a117fee8",
            "id": "rtb-0fab6fd73a117fee8",
            "owner_id": "112659975190",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-0c5bba8160c29f05c",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "experiment-r-private-a"
            },
            "tags_all": {
              "Name": "experiment-r-private-a"
            },
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_internet_gateway.gw",
            "aws_nat_gateway.gw-a",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_availability_zone.a",
            "aws_eip.nat-a"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "r-public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:route-table/rtb-0a4184824bc25166e",
            "id": "rtb-0a4184824bc25166e",
            "owner_id": "112659975190",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-02f7bc53735b6acbd",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "experiment-r-public"
            },
            "tags_all": {
              "Name": "experiment-r-public"
            },
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_internet_gateway.gw",
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "ra-app-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0074b4b533cd49edd",
            "route_table_id": "rtb-0fab6fd73a117fee8",
            "subnet_id": "subnet-0d045f4192ac562cd"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.private-app-a",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_availability_zone.a",
            "aws_eip.nat-a",
            "aws_internet_gateway.gw",
            "aws_nat_gateway.gw-a",
            "aws_route_table.r-private-a"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "ra-public-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-04d15672a9262d0a9",
            "route_table_id": "rtb-0a4184824bc25166e",
            "subnet_id": "subnet-078d3adb210d347d1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.r-public",
            "aws_subnet.public-a",
            "aws_vpc.main",
            "data.aws_availability_zone.a",
            "aws_internet_gateway.gw"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:security-group/sg-08fbbace557256e78",
            "description": "Security group for all nodes in the cluster",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-08fbbace557256e78",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              }
            ],
            "name": "experiment-eks-node-sg",
            "name_prefix": "",
            "owner_id": "112659975190",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "experiment-eks-node-sg"
            },
            "tags_all": {
              "Name": "experiment-eks-node-sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private-app-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:subnet/subnet-0d045f4192ac562cd",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1a",
            "availability_zone_id": "euc1-az2",
            "cidr_block": "10.139.4.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0d045f4192ac562cd",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "112659975190",
            "tags": {
              "Name": "experiment-private-app-a"
            },
            "tags_all": {
              "Name": "experiment-private-app-a"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.main",
            "data.aws_availability_zone.a"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public-a",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:subnet/subnet-078d3adb210d347d1",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "eu-central-1a",
            "availability_zone_id": "euc1-az2",
            "cidr_block": "10.139.0.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-078d3adb210d347d1",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "112659975190",
            "tags": {
              "Name": "experiment-public-a"
            },
            "tags_all": {
              "Name": "experiment-public-a"
            },
            "timeouts": null,
            "vpc_id": "vpc-0a6678db6d02f8161"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.main",
            "data.aws_availability_zone.a"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-central-1:112659975190:vpc/vpc-0a6678db6d02f8161",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.139.0.0/16",
            "default_network_acl_id": "acl-0ebec2d351ffec757",
            "default_route_table_id": "rtb-07da1f15236a45a18",
            "default_security_group_id": "sg-0173015258122288b",
            "dhcp_options_id": "dopt-d12539ba",
            "enable_classiclink": null,
            "enable_classiclink_dns_support": null,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-0a6678db6d02f8161",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-07da1f15236a45a18",
            "owner_id": "112659975190",
            "tags": {
              "Name": "experiment-vpc"
            },
            "tags_all": {
              "Name": "experiment-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "k3d",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1427159405598995493",
            "triggers": {
              "data": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nk3d cluster create mycluster --config run_k3d.yaml\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#k3d cluster delete mycluster\n",
              "dataconf": "apiVersion: k3d.io/v1alpha4 # this will change in the future as we make everything more stable\nkind: Simple # internally, we also have a Cluster config, which is not yet available externally\nmetadata:\n  name: mycluster\nservers: 3\nagents: 5\noptions:\n  k3d: \n    wait: true\n    timeout: \"600s\"\n  k3s:\n    nodeLabels:\n      - label: ingress=true \n        nodeFilters:\n          - agent:1\n    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`\n      - arg: --node-taint=ingress=true:NoSchedule\n        nodeFilters:\n          - server:1\n",
              "instance": "i-0d0fe4a6e557196df"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.k3d",
            "data.local_file.k3d",
            "data.local_file.k3dconf"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "kind",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "9078948428348561901",
            "triggers": {
              "data": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64\nchmod +x ./kind\nsudo mv ./kind /usr/bin/kind\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nkind create cluster --config run_kind.yaml\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\n        echo \"$foo CNI pods ready, waiting.\"\ndone\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n\n#kind delete cluster --name multi-a\n",
              "dataconf": "kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: multi-a\nnetworking:\n  podSubnet: \"10.241.0.0/16\"\n  serviceSubnet: \"10.92.0.0/16\"\n  ipFamily: ipv4\nnodes:\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: control-plane\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n  kubeadmConfigPatches:\n  - |\n    kind: JoinConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress=true\"\n        register-with-taints: \"ingress=true:NoSchedule\"\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n  kubeadmConfigPatches:\n  - |\n    kind: JoinConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress=true\"\n        register-with-taints: \"ingress=true:NoSchedule\"\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n- role: worker\n  extraMounts:\n  - hostPath: ./shared/multi-a\n    containerPath: /data\n\n",
              "instance": "i-06de3b4468e9b669d"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.kind",
            "data.local_file.kind",
            "data.local_file.kindconf"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "microk8s",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8119378926241949843",
            "triggers": {
              "data": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\n#sudo snap install lxd\nsudo apt -y install lxd\nsudo lxd init --auto\nlxc profile create microk8s\nwget https://raw.githubusercontent.com/ubuntu/microk8s/master/tests/lxc/microk8s.profile -O microk8s.profile\ncat microk8s.profile | lxc profile edit microk8s\nrm microk8s.profile\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\n#https://microk8s.io/docs/lxd\n#https://ubuntu.com/tutorials/getting-started-with-kubernetes-ha?\u0026_ga=2.199186223.1894255953.1646810874-1723796373.1646050010#4-create-a-microk8s-multinode-cluster\n\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m1\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m2 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-m3 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w1 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w2 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w3 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w4 \u0026\nlxc launch -p default -p microk8s ubuntu:20.04 microk8s-w5 \u0026\nwhile [ \"$(lxc list | grep RUNNING | wc -l)\" -ne 8 ]\ndo\n        sleep 0.1\ndone\nlxc exec microk8s-m1 -- snap install microk8s --classic\nlxc exec microk8s-m2 -- snap install microk8s --classic\nlxc exec microk8s-m3 -- snap install microk8s --classic\nlxc exec microk8s-w1 -- snap install microk8s --classic\nlxc exec microk8s-w2 -- snap install microk8s --classic\nlxc exec microk8s-w3 -- snap install microk8s --classic\nlxc exec microk8s-w4 -- snap install microk8s --classic\nlxc exec microk8s-w5 -- snap install microk8s --classic\nlxc exec microk8s-m1 -- microk8s status --wait-ready\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-m2 -- $join_cmd --controlplane\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-m3 -- $join_cmd --controlplane\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w1 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w2 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w3 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w4 -- $join_cmd --worker\njoin_cmd=$(lxc exec microk8s-m1 -- microk8s add-node --format short | head -1)\nlxc exec microk8s-w5 -- $join_cmd --worker\n\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(lxc exec microk8s-m1 -- microk8s kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(lxc exec microk8s-m1 -- microk8s kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nlxc exec microk8s-m1 -- microk8s kubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#lxc delete microk8s-m1 microk8s-m2 microk8s-m3 microk8s-w1 microk8s-w2 microk8s-w3 microk8s-w4 microk8s-w5 --force\n\n\n",
              "instance": "i-02f866dea971bedae"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.microk8s",
            "data.local_file.microk8s"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "minikube",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4347458282938698448",
            "triggers": {
              "data": "#!/bin/bash\n\nMEMORY_AVAIL=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Tööriista paigaldus\"\nSTART_TIME=$SECONDS\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/bin/minikube\n\necho \"Tööriista paigaldus võttis $(($SECONDS - $START_TIME)) sekundit\"\n\n\necho \"Tööriistaga klastri loomine.\"\nSTART_TIME=$SECONDS\nfree -m\nminikube start -p myminikube -n 8 --container-runtime docker --driver=docker \n\necho \"Tööriista käivitamine võttis $(($SECONDS - $START_TIME)) sekundit\"\n\necho \"Kontroll kas kõik töötaja masinad on valmis.\"\nSTART_TIME=$SECONDS\nfoo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get pods -n kube-system -l app=kindnet --no-headers | grep \"Running\" | wc -l)\n        echo \"$foo CNI pods ready, waiting.\"\ndone\nfoo=$(kubectl get nodes | grep Ready | wc -l)\nwhile [ \"$foo\" -lt \"8\" ]\ndo\n        sleep 1\n        foo=$(kubectl get nodes | grep Ready | wc -l)\n        echo \"$foo nodes ready, waiting.\"\ndone\nkubectl get nodes\necho \"Kõik töötaja masinad on valmis $(($SECONDS - $START_TIME)) sekundiga.\"\n\nMEM_NOW=`free -m | grep Mem | awk '{print $7}'`\n\necho \"Mälukasutuse muutus on $(($MEMORY_AVAIL - $MEM_NOW))\"\nfree -m\n\n#minikube delete -p myminikube\n\n",
              "instance": "i-076b366b3633706cd"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.minikube",
            "data.local_file.minikube"
          ]
        }
      ]
    }
  ]
}
